#!/bin/bash
# This file is generated by Salt. Don't change it; it will change
# itself back to what it was.
{# The comment above is of course for the file deployed, not for this
template, which you can change. #}
read -r -d '' USAGE <<EOF1
This script is a wrapper around duplicity, with options concerning the
backup of this specific machine.

custom_backup help
custom_backup scheduled
custom_backup restore [options] target
custom_backup verify [options] target
custom_backup collection-status [options]
custom_backup list-current-files [options]
custom_backup cleanup [options]

"help" shows this message. "scheduled" is intended to be run by cron
and performs the scheduled backup. The rest of the commands are
identical to the equivalent duplicity commands; the only difference is
that several options, such as the backup location, gpg options, and so
on, are passed to duplicity anyway and therefore you don't need to
specify them.
EOF1

PATH=/bin:/usr/bin:/sbin:/usr/sbin
PASSPHRASE='{{ gpg_pw }}'
FTP_PASSWORD={{ target_pw }}
TARGET={{ target }}
VERBOSITY={{ verbosity }}
GPG_OPTIONS="--encrypt-key={{ key_id }}"
ASKPASS="{% if target_pw and target[0] == 's' %}--ssh-askpass{% endif %}"
INCLUDES_EXCLUDES="{{ includes_excludes.replace('"', '\"') }}"
EXTRA_PARMS="{{ extra_parms.replace('"', '\\"') }}"
function EMAIL {
        echo "$(hostname) failed Duplicity backup on $(date)" | mail -s "Duplicity Backup Status" root
        exit 1
}

all_options="$GPG_OPTIONS --verbosity=$VERBOSITY $ASKPASS \
            --archive-dir=/var/cache/duplicity $EXTRA_PARMS"
export PASSPHRASE FTP_PASSWORD

perform_scheduled_backup() {
    cd / # Pre/post scripts may contain "su postgres ...", which shows an error
         # message if run in directory /root, because it is inaccessible by postgres
{% if pre %}
    /etc/duplicity/pre || EMAIL
{% endif %}
    duplicity remove-older-than {{ remove_older_than }} --force $all_options $TARGET || EMAIL
{% if remove_all_inc_of_but_n_full %}
    # For the following command we add --verbosity=error at the end,
    # which overrides whatever verbosity has been set; this is because
    # with "warning", on some machines it shows a "No extraneous files
    # found, nothing deleted in cleanup", which is harmless and not
    # clear why it appears.
    duplicity remove-all-inc-of-but-n-full {{ remove_all_inc_of_but_n_full }} --force $all_options \
              --verbosity=error $TARGET || EMAIL
{% endif %}
    duplicity --full-if-older-than={{ full_if_older_than }} $INCLUDES_EXCLUDES \
              $all_options --no-print-statistics {{ source }} $TARGET || EMAIL
{% if post %}
    /etc/duplicity/post || EMAIL
{% endif %}
}

command=$1
shift
case "$command" in
    help)
        echo "$USAGE"
        ;;
    restore|verify)
        duplicity $command $all_options $TARGET $*
        ;;
    collection-status|list-current-files|cleanup)
        duplicity $command $all_options $* $TARGET
        ;;
    scheduled)
        perform_scheduled_backup
        ;;
    *)
        echo "$USAGE" >&2
        exit 1
        ;;
esac
